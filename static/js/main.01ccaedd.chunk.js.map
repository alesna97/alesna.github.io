{"version":3,"sources":["assets/images/me1.png","assets/cv/anjas-lesmana.pdf","assets/images/me2.png","containers/asyncpages.js","components/Container/container-jss.js","components/Container/index.js","containers/Layout/index.js","App.js","serviceWorker.js","styles/themes.js","index.js"],"names":["module","exports","Loading","color","Home","Loadable","loader","loading","AboutMe","Education","ProfessionalExperience","Portofolio","TechnicalSkill","useStyles","makeStyles","theme","root","borderRadius","backgroundColor","display","width","height","profile","alignItems","justifyContent","flexDirection","content","avatar","spacing","marginBottom","name","fontWeight","palette","primary","main","jobTitle","socialMedia","buttonCv","marginTop","Container","props","children","classes","Paper","className","Grid","container","item","md","xs","Grow","in","Avatar","src","me1","sizes","Typography","variant","IconButton","Button","onClick","window","location","href","cv","position","zIndex","navigation","right","padding","Layout","Slide","direction","Tooltip","title","placement","component","Link","to","App","exact","path","Boolean","hostname","match","themes","createMuiTheme","secondary","typography","useNextVariants","fontFamily","join","overrides","MuiButton","MuiDivider","ReactDOM","render","StrictMode","ThemeProvider","style","params","particles","number","value","density","enable","size","random","anim","speed","size_min","line_linked","move","out_mode","interactivity","events","onhover","mode","onclick","modes","bubble","distance","duration","opacity","repulse","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.01ccaedd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me1.5b68a8a0.png\";","module.exports = __webpack_public_path__ + \"static/media/anjas-lesmana.62e147c0.pdf\";","module.exports = __webpack_public_path__ + \"static/media/me2.e8f54771.png\";","/* eslint-disable react/jsx-filename-extension */\n/* eslint-disable import/prefer-default-export */\nimport React from 'react';\nimport Loadable from 'react-loadable';\nimport { PuffLoader } from 'react-spinners';\n\nconst Loading = () => <PuffLoader color=\"#FFFFFF\" />;\n\nexport const Home = Loadable({\n  loader: () => import('./Pages/Home'),\n  loading: Loading,\n});\n\nexport const AboutMe = Loadable({\n  loader: () => import('./Pages/AboutMe'),\n  loading: Loading,\n});\n\nexport const Education = Loadable({\n  loader: () => import('./Pages/Education'),\n  loading: Loading,\n});\n\nexport const ProfessionalExperience = Loadable({\n  loader: () => import('./Pages/ProfessionalExperience'),\n  loading: Loading,\n});\n\nexport const Portofolio = Loadable({\n  loader: () => import('./Pages/Portofolio'),\n  loading: Loading,\n});\n\nexport const TechnicalSkill = Loadable({\n  loader: () => import('./Pages/TechnicalSkill'),\n  loading: Loading,\n});\n","import { makeStyles } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    borderRadius: 20,\n    backgroundColor: '#444444',\n    display: 'flex',\n    width: 1200,\n    height: 600,\n  },\n  profile: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n    flexDirection: 'column',\n  },\n  content: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    width: '100%',\n    height: '100%',\n  },\n  avatar: {\n    width: theme.spacing(20),\n    height: theme.spacing(20),\n    marginBottom: theme.spacing(2),\n  },\n  name: {\n    fontWeight: 'bold',\n    color: theme.palette.primary.main,\n  },\n  jobTitle: {\n    color: theme.palette.primary.main,\n  },\n  socialMedia: {\n    display: 'flex',\n  },\n  buttonCv: {\n    marginTop: theme.spacing(4),\n  },\n}));\n\nexport default useStyles;\n","/* eslint-disable no-return-assign */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Avatar, Button, Grid, Grow, IconButton, Paper, Typography,\n} from '@material-ui/core';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport EmailIcon from '@material-ui/icons/Email';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport useStyles from './container-jss';\nimport me1 from '../../assets/images/me1.png';\nimport me2 from '../../assets/images/me2.png';\nimport cv from '../../assets/cv/anjas-lesmana.pdf';\n\nconst Container = (props) => {\n  const { children } = props;\n  const classes = useStyles();\n  return (\n    <>\n      <Paper className={classes.root}>\n        <Grid container>\n          <Grid item md={4} xs={12}>\n            <Grow in>\n              <div className={classes.profile}>\n\n                <Avatar\n                  className={classes.avatar}\n                  src={me1}\n                  sizes=\"large\"\n                />\n                <Typography\n                  variant=\"h5\"\n                  className={classes.name}\n                >\n                  Anjas Lesmana\n                </Typography>\n                <Typography\n                  variant=\"body1\"\n                  color=\"secondary\"\n                >\n                  Web Developer\n                </Typography>\n                <div className={classes.socialMedia}>\n                  <IconButton>\n                    <GitHubIcon color=\"secondary\" />\n                  </IconButton>\n\n                  <IconButton>\n                    <EmailIcon color=\"secondary\" />\n                  </IconButton>\n\n                  <IconButton>\n                    <LinkedInIcon color=\"secondary\" />\n                  </IconButton>\n                </div>\n\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.buttonCv}\n                  onClick={() => window.location.href = cv}\n                >\n                  Download CV\n                </Button>\n\n              </div>\n            </Grow>\n          </Grid>\n          <Grid item md={8} xs={12}>\n            <div className={classes.content}>\n              { children }\n            </div>\n          </Grid>\n        </Grid>\n      </Paper>\n    </>\n  );\n};\n\nContainer.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Button, Fade, IconButton, List, ListItem, makeStyles, Paper, Slide, Tooltip,\n} from '@material-ui/core';\nimport Particles from 'react-particles-js';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SchoolIcon from '@material-ui/icons/School';\nimport CodeIcon from '@material-ui/icons/Code';\nimport WorkIcon from '@material-ui/icons/Work';\nimport AppsIcon from '@material-ui/icons/Apps';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { Link } from 'react-router-dom';\nimport Container from '../../components/Container';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    position: 'fixed',\n    height: '100%',\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n    zIndex: 1,\n  },\n  navigation: {\n    position: 'absolute',\n    zIndex: 1,\n    width: 56,\n    display: 'flex',\n    right: 150,\n    flexDirection: 'column',\n    backgroundColor: theme.palette.primary.main,\n    padding: theme.spacing(1),\n  },\n}));\n\nconst Layout = (props) => {\n  const { children } = props;\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <Container>\n        { children }\n      </Container>\n      <Slide in direction=\"up\">\n        <Paper className={classes.navigation}>\n\n          <Tooltip title=\"Home\" placement=\"left\">\n            <IconButton component={Link} to=\"/\">\n              <HomeIcon />\n            </IconButton>\n          </Tooltip>\n\n          <Tooltip title=\"About me\" placement=\"left\">\n            <IconButton component={Link} to=\"/about-me\">\n              <PersonIcon />\n            </IconButton>\n          </Tooltip>\n\n          <Tooltip title=\"Education\" placement=\"left\">\n            <IconButton component={Link} to=\"/education\">\n              <SchoolIcon />\n            </IconButton>\n          </Tooltip>\n\n          <Tooltip title=\"Technical Sill\" placement=\"left\">\n            <IconButton component={Link} to=\"/technical-skill\">\n              <CodeIcon />\n            </IconButton>\n          </Tooltip>\n\n          <Tooltip title=\"Professional Experience\" placement=\"left\">\n            <IconButton component={Link} to=\"/professional-experience\">\n              <WorkIcon />\n            </IconButton>\n          </Tooltip>\n\n          <Tooltip title=\"Portofolio\" placement=\"left\">\n            <IconButton component={Link} to=\"/portofolio\">\n              <AppsIcon />\n            </IconButton>\n          </Tooltip>\n\n        </Paper>\n      </Slide>\n    </div>\n  );\n};\nLayout.propTypes = {\n\n};\n\nexport default Layout;\n","/* eslint-disable jsx-quotes */\nimport React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport {\n  AboutMe,\n  Education,\n  Home,\n  Portofolio,\n  ProfessionalExperience,\n  TechnicalSkill,\n} from './containers/asyncpages';\nimport Layout from './containers/Layout';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Layout>\n          <Route exact path='/' component={Home} />\n          <Route path='/about-me' component={AboutMe} />\n          <Route path='/education' component={Education} />\n          <Route path='/technical-skill' component={TechnicalSkill} />\n          <Route path='/professional-experience' component={ProfessionalExperience} />\n          <Route path='/portofolio' component={Portofolio} />\n        </Layout>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createMuiTheme } from '@material-ui/core';\n\nconst themes = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#7289DA',\n    },\n    secondary: {\n      main: '#FFFFFF',\n    },\n  },\n  typography: {\n    useNextVariants: true,\n    fontFamily: [\n      'Open Sans',\n    ].join(','),\n  },\n  overrides: {\n    MuiButton: {\n      root: {\n        borderRadius: 20,\n      },\n    },\n    MuiDivider: {\n      root: {\n        backgroundColor: '#7289DA',\n      },\n    },\n  },\n});\n\nexport default themes;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { ThemeProvider } from '@material-ui/core';\nimport Particles from 'react-particles-js';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport themes from './styles/themes';\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={themes}>\n      <Particles\n        style={{ zIndex: 1, position: 'fixed' }}\n        params={{\n          particles: {\n            number: {\n              value: 160,\n              density: {\n                enable: false,\n              },\n            },\n            size: {\n              value: 3,\n              random: true,\n              anim: {\n                speed: 4,\n                size_min: 0.3,\n              },\n            },\n            line_linked: {\n              enable: false,\n            },\n            move: {\n              random: true,\n              speed: 1,\n              direction: 'top',\n              out_mode: 'out',\n            },\n          },\n          interactivity: {\n            events: {\n              onhover: {\n                enable: true,\n                mode: 'bubble',\n              },\n              onclick: {\n                enable: true,\n                mode: 'repulse',\n              },\n            },\n            modes: {\n              bubble: {\n                distance: 250,\n                duration: 2,\n                size: 0,\n                opacity: 0,\n              },\n              repulse: {\n                distance: 400,\n                duration: 4,\n              },\n            },\n          },\n        }}\n      />\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}